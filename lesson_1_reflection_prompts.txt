How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I see new version with green marked added rows and red marked removed rows.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Access on first or second click.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros:
    - select logical part for commit
    - use offline
    - use any editor
    cons:
    - manual work

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git is used for files of source code which are connected.

How can you use the commands git log and git diff to view the history of files?

    git log - use for overview a finding out commit id
    git diff - show diff between two versions
    git config --global color.ui auto - use for colored changes

How might using version control make you more confident to make changes that
could break something?

    - you can see to log on last changes
    - you can show diff between versions and find out where are errors
    - you can always revert back to the point when those were working correctly

Now that you have your workspace set up, what do you want to try using Git for?

    - transition between versions with checkout, repair errors and go to newest
