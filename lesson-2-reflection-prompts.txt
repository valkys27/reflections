What happens when you initialize a repository? Why do you need to do it?

- it initialized and created Git repository
- it created hidden folder named .git

How is the staging area different from the working directory and the repository?
What value do you think it offers?

- staging area contains files which are instead of commit
- allows commit more files to repository together

How can you use the staging area to make sure you have one commit per logical
change?

- check changes between working directory and staging area with commands git diff
- add files with changes to staging area with command git add [name] for each
- check changes between staging area and last commit with command git diff --stage
- commit changes to repository with command git commit, write commit message and save it

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

- for new experimental feature
- for new languege version

How do the diagrams help you visualize the branch structure?

- find out which commits are included in branch
- may see workflow of current branch and what work was add to master branch

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
